From 69f6b51a0291cc49854b5125aac7ebbb576a73a3 Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Thu, 2 Jun 2016 09:46:45 -0700
Subject: [PATCH] chipsec_km: utilize inode_lock/unlock wrappers for new
 kernels

As of v4.5, wrappers to lock and unlock the inode's mutex were
introduced. This change is useful to leverage future changes in the
implementation of inode locking. For instance, a new change coming in
Linux v4.7-rc1 changed the i_node locking mechanism from using a mutex
to a rw sempahore.

Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
 source/drivers/linux/chipsec_km.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/source/drivers/linux/chipsec_km.c b/source/drivers/linux/chipsec_km.c
index e76f6a9..f2d8332 100644
--- a/source/drivers/linux/chipsec_km.c
+++ b/source/drivers/linux/chipsec_km.c
@@ -535,6 +535,9 @@ static loff_t memory_lseek(struct file * file, loff_t offset, int orig)
 //Older kernels (<20) uses f_dentry instead of f_path.dentry
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,20)
 	mutex_lock(&file->f_dentry->d_inode->i_mutex);
+//As of v4.5, use the wrappers inode_lock/unlock
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(4,5,0)
+	inode_lock(file->f_path.dentry->d_inode);
 #else
 	mutex_lock(&file->f_path.dentry->d_inode->i_mutex);
 #endif 
@@ -556,6 +559,9 @@ static loff_t memory_lseek(struct file * file, loff_t offset, int orig)
 //Older kernels (<20) uses f_dentry instead of f_path.dentry
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,20)
 	mutex_unlock(&file->f_dentry->d_inode->i_mutex);
+//As of v4.5, use the wrappers inode_lock/unlock
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(4,5,0)
+	inode_unlock(file->f_path.dentry->d_inode);
 #else
 	mutex_unlock(&file->f_path.dentry->d_inode->i_mutex);
 #endif 
-- 
2.8.3

